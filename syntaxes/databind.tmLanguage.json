{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Databind",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#invalids"
		},
		{
			"include": "#entities"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [		
			{
				"begin": "say",
				"end": "\n",
				"name": "keyword.control.databind",
				"patterns": [
					{
						"name": "invalid.illegal.databind",
						"match": "\\%"
					},
					{
						"name": "string.quoted.double.databind",
						"match": "([^\\%]*)+"
					}
				]
			},
			{
				"begin": "\\b(func|call)\\b ",
				"end": "\n",
				"name": "keyword.databind",
				"patterns": [
					{
						"name": "entity.name.variable.databind",
						"match": "(?!\\%)[a-z0-9_]+"
					},
					{
						"name": "invalid.illegal",
						"match": "[A-Z]+"
					}
				]
			},
			{
				"begin": "\\b(def)\\b|\\?",
				"end": "\n",
				"name": "keyword.databind",
				"patterns": [
					{
						"name": "entity.name.variable.databind",
						"match": "[a-z0-9A-Z]+"
					},
					{
						"name": "constant.regexp.databind",
						"match": "\\(|\\)"
					},
					{
						"name": "string.quoted.double.databind",
						"begin": "\"",
						"end": "\"",
						"patterns": [
						{
							"name": "constant.character.escape.databind",
							"match": ""
						}
						]
					}
				]
			},
			{
				"name": "keyword.control.databind",
				"match": "\\b(runif|while|else)\\b"
			},
			{
				"name":"keyword.databind", 
				"match": "\\b(end|def|tag)\\b|\\!|\\?"
			},
			{
				"name": "constant.regexp.databind",
				"match": "\\b(tick|load)\\b"
			},
			{
				"name": "keyword.operator.quantifier.regexp.databind",
				"match": "\\b(true|false)\\b|@a|@e|@p|@r|@s"
			}
		]
		},
		"comments": {
			"name": "comment.line.databind",
			"begin": "#",
			"end": "\n"
		},
		"invalids": {
			"name": "invalid.databind",
			"match": "\\%"
		},
		"variables": {
			"patterns": [
				{
					"begin": "\\b(var |obj |sobj |tvar |gvar |delvar |delobj )\\b",
					"end": "\n| ",
					"name": "variable.databind",
					"patterns": [
						{
							"name": "storage.type.string.go.databind",
							"match": "[a-zA-Z0-9_]+"
						}
					]
				},
				{
					"begin": "\\b(sbop)\\b",
					"end": "\n",
					"name": "variable.databind",
					"patterns": [
						{
							"name": "constant.numeric.databind",
							"match": "=|:|-|\\+|%=|\\*|\\/=|>|<"
						},
						{
							"name": "keyword.operator.quantifier.regexp.databind",
							"match": "@a|@e|@p|@r|@s"
						},
						{
							"name": "storage.type.string.go.databind",
							"match": "[a-zA-Z0-9]+"
						}
					]
				},
				{
					"name": "constant.numeric.databind",
					"match": "=|:|-|\\+|%=|\\*|\\/=|>|<"
				},
				{
					"name": "storage.type.numeric.go.databind",
					"match": "[0-9]|\\."
				}
	]},
		"strings": {
			"name": "string.quoted.double.databind",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.databind",
					"match": ""
				}
			]
		}	
	},
	"scopeName": "source.databind"
}